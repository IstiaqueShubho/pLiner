cmake_minimum_required(VERSION 2.8.4)
project(pLiner)

#set(LLVM_PATH /usr/workspace/wsa/guo8/home1/clang-llvm/build)
set(LLVM_PATH /home/huiguo15/home1/clang+llvm)
link_directories(${LLVM_PATH}/lib)
include_directories(${LLVM_PATH}/include)

#execute_process(COMMAND llvm-config --libdir OUTPUT_VARIABLE llvmlib)
#execute_process(COMMAND llvm-config --includedir OUTPUT_VARIABLE llvminclude)
#
#message(STATUS "llvmlib="${llvmlib})
#message(STATUS "llvminclude="${llvminclude})
#
#link_directories(${llvmlib})
#include_directories(${llvminclude})

add_definitions(
-D_GNU_SOURCE 
-D__STDC_CONSTANT_MACROS 
-D__STDC_FORMAT_MACROS 
-D__STDC_LIMIT_MACROS
)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fno-exceptions -fno-rtti")
set(LLVM_LINK_COMPONENTS Support)

add_executable(pLiner
  FPDebugger.cpp
  FPDebugger.h
  analysis/funcAnalysis.cpp
  analysis/funcAnalysis.h
  analysis/funcPrint.cpp
  analysis/funcPrint.h
  transform/funcTrans.cpp
  transform/funcTrans.h
  core/_fp.h
  core/_funcRecord.cpp
  core/_funcRecord.h
  core/_lineRecord.cpp
  core/_lineRecord.h
  json.hpp
)


target_link_libraries(pLiner
  clangTooling 
  clangDriver 
  clangFrontend 
  clangParse 
  clangSerialization 
  clangSema 
  clangAnalysis 
  clangEdit 
  clangLex 
  clangAST 
  clangBasic 
  clangRewrite 
  clangRewriteFrontend 
)

target_link_libraries(pLiner
  LLVMXRay 
  LLVMWindowsManifest 
  LLVMTextAPI 
  LLVMTableGen 
  LLVMSymbolize 
  LLVMDebugInfoPDB 
  LLVMOrcJIT 
  LLVMJITLink 
  LLVMObjectYAML 
  LLVMMCA 
  LLVMLTO 
  LLVMPasses 
  LLVMObjCARCOpts 
  LLVMLineEditor 
  LLVMLibDriver 
  LLVMInterpreter 
  LLVMFuzzMutate 
  LLVMMCJIT 
  LLVMExecutionEngine 
  LLVMRuntimeDyld 
  LLVMDlltoolDriver 
  LLVMOption 
  LLVMDebugInfoGSYM 
  LLVMCoverage 
  LLVMCoroutines 
  LLVMXCoreDisassembler 
  LLVMXCoreCodeGen 
  LLVMXCoreDesc 
  LLVMXCoreInfo 
  LLVMX86Disassembler 
  LLVMX86AsmParser 
  LLVMX86CodeGen 
  LLVMX86Desc 
  LLVMX86Utils 
  LLVMX86Info 
  LLVMWebAssemblyDisassembler 
  LLVMWebAssemblyCodeGen 
  LLVMWebAssemblyDesc 
  LLVMWebAssemblyAsmParser 
  LLVMWebAssemblyInfo 
  LLVMSystemZDisassembler 
  LLVMSystemZCodeGen 
  LLVMSystemZAsmParser 
  LLVMSystemZDesc 
  LLVMSystemZInfo 
  LLVMSparcDisassembler 
  LLVMSparcCodeGen 
  LLVMSparcAsmParser 
  LLVMSparcDesc 
  LLVMSparcInfo 
  LLVMRISCVDisassembler 
  LLVMRISCVCodeGen 
  LLVMRISCVAsmParser 
  LLVMRISCVDesc 
  LLVMRISCVUtils 
  LLVMRISCVInfo 
  LLVMPowerPCDisassembler 
  LLVMPowerPCCodeGen 
  LLVMPowerPCAsmParser 
  LLVMPowerPCDesc 
  LLVMPowerPCInfo 
  LLVMNVPTXCodeGen 
  LLVMNVPTXDesc 
  LLVMNVPTXInfo 
  LLVMMSP430Disassembler 
  LLVMMSP430CodeGen 
  LLVMMSP430AsmParser 
  LLVMMSP430Desc 
  LLVMMSP430Info 
  LLVMMipsDisassembler 
  LLVMMipsCodeGen 
  LLVMMipsAsmParser 
  LLVMMipsDesc 
  LLVMMipsInfo 
  LLVMLanaiDisassembler 
  LLVMLanaiCodeGen 
  LLVMLanaiAsmParser 
  LLVMLanaiDesc 
  LLVMLanaiInfo 
  LLVMHexagonDisassembler 
  LLVMHexagonCodeGen 
  LLVMHexagonAsmParser 
  LLVMHexagonDesc 
  LLVMHexagonInfo 
  LLVMBPFDisassembler 
  LLVMBPFCodeGen 
  LLVMBPFAsmParser 
  LLVMBPFDesc 
  LLVMBPFInfo 
  LLVMARMDisassembler 
  LLVMARMCodeGen 
  LLVMARMAsmParser 
  LLVMARMDesc 
  LLVMARMUtils 
  LLVMARMInfo 
  LLVMAMDGPUDisassembler 
  LLVMAMDGPUCodeGen 
  LLVMMIRParser 
  LLVMipo 
  LLVMInstrumentation 
  LLVMVectorize 
  LLVMLinker 
  LLVMIRReader 
  LLVMAsmParser 
  LLVMAMDGPUAsmParser 
  LLVMAMDGPUDesc 
  LLVMAMDGPUUtils 
  LLVMAMDGPUInfo 
  LLVMAArch64Disassembler 
  LLVMMCDisassembler 
  LLVMAArch64CodeGen 
  LLVMGlobalISel 
  LLVMSelectionDAG 
  LLVMAsmPrinter 
  LLVMDebugInfoDWARF 
  LLVMCodeGen 
  LLVMTarget 
  LLVMScalarOpts 
  LLVMInstCombine 
  LLVMAggressiveInstCombine 
  LLVMTransformUtils 
  LLVMBitWriter 
  LLVMAnalysis 
  LLVMProfileData 
  LLVMObject 
  LLVMBitReader 
  LLVMBitstreamReader 
  LLVMCore 
  LLVMRemarks 
  LLVMAArch64AsmParser 
  LLVMMCParser 
  LLVMAArch64Desc 
  LLVMMC 
  LLVMDebugInfoCodeView 
  LLVMDebugInfoMSF 
  LLVMBinaryFormat 
  LLVMAArch64Utils 
  LLVMAArch64Info 
  LLVMSupport 
  LLVMDemangle
)

include(FindCurses)
target_link_libraries(pLiner
    pthread
    z
    dl
    ${CURSES_LIBRARIES}
)

install(TARGETS pLiner
  DESTINATION bin)

